
( compililation helpers for noct )
chain: noct'
( -- FOR loop compiler --------------------------------------- )

{{ ( Helper functions )
: relop dup 2 + @ 0 > [ &<= ] [ &>= ] if ;
: start dup 4 + 1 , , ;
: goal dup 3 + 1 , , ;
: by dup 2 + 1 , , ;
: quote dup 1 + 1 , , ;
---reveal---
: FOR ( start goal step quote - )
  ahead [ 5 allot ] dip here over !
  quote  ! by  ! goal  ! start  !
  repeat [
    start  @ goal  @ relop , 0;  drop
    start  @ by  @  + start  !
    quote  @ do
  ] dip again
  drop
; immediate
}}

( -- CONST compiler ---------------------------------------- )

: CONST "( ``- ) reads to '`', then reads name. makes string or constant" :doc
  13 ` accept
  ( read up the the newline [asci char #13]. )
  ( the reason is that we need to distinguish the number )
  ( '5' from the string '"5"'. )
  tib isNumber?
    [ toNumber ` constant ]
    [ ` string: ]
  if ;

;chain
